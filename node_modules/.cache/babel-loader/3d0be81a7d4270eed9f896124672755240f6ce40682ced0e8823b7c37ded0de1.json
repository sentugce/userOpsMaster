{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nconst axiosInstance = axios.create({\n  baseURL: 'http://localhost:5000'\n});\nexport default {\n  data() {\n    return {\n      users: [],\n      open: false,\n      data: {\n        email: '',\n        password: '',\n        fullname: ''\n      }\n    };\n  },\n  created: function () {\n    this.getList();\n  },\n  methods: {\n    getList() {\n      axiosInstance.get('/usersList').then(response => {\n        this.users = response.data;\n        console.log(response.data);\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n    update(id) {\n      //console.log(id);\n      this.$router.push(\"/user-detail/\" + id);\n    },\n    deleteUser(id) {\n      axiosInstance.delete('/usersDelete/' + id).then(response => {\n        console.log(response.data.deletedUser);\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n    handleAddUser() {\n      axiosInstance.post('/usersSave', this.data).then(response => {\n        this.open = false;\n        this.users.push(response.data.createUser);\n        console.log(response.data.createUser);\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","axiosInstance","create","baseURL","data","users","open","email","password","fullname","created","getList","methods","get","then","response","console","log","catch","err","update","id","$router","push","deleteUser","delete","deletedUser","handleAddUser","post","createUser"],"sources":["/home/eyl/apps/nodeapp/fronted/src/components/UserList.vue"],"sourcesContent":["<template>\n    <nav>\n        <div>\n            <div class=\"container\">\n                <div v-if=\"open == false\">\n                    <button @click=\"open = true\" class=\"btn btn-success\">Yeni Kişi Ekle</button>\n                </div>\n                <div v-else>\n                    <div class=\"mb-3\">\n                        <label for=\"exampleFormControlInput1\" class=\"form-label\">Email address</label>\n                        <input type=\"email\" class=\"form-control\" id=\"exampleFormControlInput1\" v-model=\"data.email\"\n                            @change=\"event => text = event.target.value\">\n                        <label for=\"exampleFormControlInput1\" class=\"form-label\">Fullname</label>\n                        <input type=\"text\" class=\"form-control\" id=\"exampleFormControlInput1\" v-model=\"data.fullname\"\n                            @change=\"event => text = event.target.value\">\n                        <label for=\"exampleFormControlInput1\" class=\"form-label\">Password</label>\n                        <input type=\"password\" class=\"form-control\" id=\"exampleFormControlInput1\" v-model=\"data.password\"\n                            @change=\"event => text = event.target.value\">\n                        <button @click=\"handleAddUser\" class=\"btn btn-success\">Ekle</button>\n                        <button v-show=\"!open\" class=\"btn btn-primary\">Kapat</button>\n                    </div>\n                </div>\n                <table class=\"table\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">id</th>\n                            <th scope=\"col\">email</th>\n                            <th scope=\"col\">fullname</th>\n                            <th scope=\"col\">güncelle</th>\n                            <th scope=\"col\">sil</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr v-for=\"user in users\" :key=\"user.id\">\n                            <th scope=\"row\"></th>\n                            <td>{{ user.id }}</td>\n                            <td>{{ user.email }}</td>\n                            <td>{{ user.fullname }}</td>\n                            <td><button class=\"btn btn-success\" @click=\"() => update(user.id)\">güncelle</button></td>\n                            <td><button class=\"btn btn-danger\" @click=\"() => deleteUser(user.id)\">sil</button></td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </nav>\n</template>\n\n<script>\nimport axios from 'axios';\n\nconst axiosInstance = axios.create({\n    baseURL: 'http://localhost:5000'\n});\nexport default {\n    data() {\n        return {\n            users: [],\n            open: false,\n            data: {\n                email: '',\n                password: '',\n                fullname: ''\n            }\n        };\n    },\n    created: function () {\n        this.getList();\n    },\n    methods: {\n        getList() {\n            axiosInstance.get('/usersList').then((response) => {\n                this.users = response.data;\n                console.log(response.data);\n            }).catch((err) => {\n                console.log(err);\n            });\n        },\n        update(id) {\n            //console.log(id);\n            this.$router.push(\"/user-detail/\" + id);\n        },\n        deleteUser(id) {\n            axiosInstance.delete('/usersDelete/' + id).then((response) => {\n                console.log(response.data.deletedUser);\n            }).catch((err) => {\n                console.log(err);\n            });\n        },\n        handleAddUser() {\n            axiosInstance.post('/usersSave', this.data).then((response) => {\n                this.open = false;\n                this.users.push(response.data.createUser);\n                console.log(response.data.createUser);\n            }).catch((err) => {\n                console.log(err);\n            });\n        }\n    }\n}\n</script>\n<style scoped lang=\"scss\">\n.container {\n    padding: 30px;\n    display: flex;\n    flex-direction: column-reverse;\n}\n</style>\n"],"mappings":";AAkDA,OAAOA,KAAI,MAAO,OAAO;AAEzB,MAAMC,aAAY,GAAID,KAAK,CAACE,MAAM,CAAC;EAC/BC,OAAO,EAAE;AACb,CAAC,CAAC;AACF,eAAe;EACXC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,KAAK,EAAE,EAAE;MACTC,IAAI,EAAE,KAAK;MACXF,IAAI,EAAE;QACFG,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE,EAAE;QACZC,QAAQ,EAAE;MACd;IACJ,CAAC;EACL,CAAC;EACDC,OAAO,EAAE,SAAAA,CAAA,EAAY;IACjB,IAAI,CAACC,OAAO,CAAC,CAAC;EAClB,CAAC;EACDC,OAAO,EAAE;IACLD,OAAOA,CAAA,EAAG;MACNV,aAAa,CAACY,GAAG,CAAC,YAAY,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;QAC/C,IAAI,CAACV,KAAI,GAAIU,QAAQ,CAACX,IAAI;QAC1BY,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACX,IAAI,CAAC;MAC9B,CAAC,CAAC,CAACc,KAAK,CAAEC,GAAG,IAAK;QACdH,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC;MACpB,CAAC,CAAC;IACN,CAAC;IACDC,MAAMA,CAACC,EAAE,EAAE;MACP;MACA,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,eAAc,GAAIF,EAAE,CAAC;IAC3C,CAAC;IACDG,UAAUA,CAACH,EAAE,EAAE;MACXpB,aAAa,CAACwB,MAAM,CAAC,eAAc,GAAIJ,EAAE,CAAC,CAACP,IAAI,CAAEC,QAAQ,IAAK;QAC1DC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACX,IAAI,CAACsB,WAAW,CAAC;MAC1C,CAAC,CAAC,CAACR,KAAK,CAAEC,GAAG,IAAK;QACdH,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC;MACpB,CAAC,CAAC;IACN,CAAC;IACDQ,aAAaA,CAAA,EAAG;MACZ1B,aAAa,CAAC2B,IAAI,CAAC,YAAY,EAAE,IAAI,CAACxB,IAAI,CAAC,CAACU,IAAI,CAAEC,QAAQ,IAAK;QAC3D,IAAI,CAACT,IAAG,GAAI,KAAK;QACjB,IAAI,CAACD,KAAK,CAACkB,IAAI,CAACR,QAAQ,CAACX,IAAI,CAACyB,UAAU,CAAC;QACzCb,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACX,IAAI,CAACyB,UAAU,CAAC;MACzC,CAAC,CAAC,CAACX,KAAK,CAAEC,GAAG,IAAK;QACdH,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC;MACpB,CAAC,CAAC;IACN;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}